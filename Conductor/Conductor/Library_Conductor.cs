//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ILibrary_Conductor")]
public interface ILibrary_Conductor
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary_Conductor/GetDirectories", ReplyAction="http://tempuri.org/ILibrary_Conductor/GetDirectoriesResponse")]
    string[] GetDirectories(string path, string filt);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary_Conductor/GetDirectories", ReplyAction="http://tempuri.org/ILibrary_Conductor/GetDirectoriesResponse")]
    System.Threading.Tasks.Task<string[]> GetDirectoriesAsync(string path, string filt);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary_Conductor/GetLogicalDrives", ReplyAction="http://tempuri.org/ILibrary_Conductor/GetLogicalDrivesResponse")]
    string[] GetLogicalDrives();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary_Conductor/GetLogicalDrives", ReplyAction="http://tempuri.org/ILibrary_Conductor/GetLogicalDrivesResponse")]
    System.Threading.Tasks.Task<string[]> GetLogicalDrivesAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary_Conductor/GetFileInfo", ReplyAction="http://tempuri.org/ILibrary_Conductor/GetFileInfoResponse")]
    System.IO.FileInfo GetFileInfo(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary_Conductor/GetFileInfo", ReplyAction="http://tempuri.org/ILibrary_Conductor/GetFileInfoResponse")]
    System.Threading.Tasks.Task<System.IO.FileInfo> GetFileInfoAsync(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary_Conductor/GetFileAttributes", ReplyAction="http://tempuri.org/ILibrary_Conductor/GetFileAttributesResponse")]
    System.IO.FileAttributes GetFileAttributes(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary_Conductor/GetFileAttributes", ReplyAction="http://tempuri.org/ILibrary_Conductor/GetFileAttributesResponse")]
    System.Threading.Tasks.Task<System.IO.FileAttributes> GetFileAttributesAsync(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary_Conductor/GetFiles", ReplyAction="http://tempuri.org/ILibrary_Conductor/GetFilesResponse")]
    string[] GetFiles(string path, string filt);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary_Conductor/GetFiles", ReplyAction="http://tempuri.org/ILibrary_Conductor/GetFilesResponse")]
    System.Threading.Tasks.Task<string[]> GetFilesAsync(string path, string filt);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ILibrary_ConductorChannel : ILibrary_Conductor, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class Library_ConductorClient : System.ServiceModel.ClientBase<ILibrary_Conductor>, ILibrary_Conductor
{
    
    public Library_ConductorClient()
    {
    }
    
    public Library_ConductorClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public Library_ConductorClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Library_ConductorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Library_ConductorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string[] GetDirectories(string path, string filt)
    {
        return base.Channel.GetDirectories(path, filt);
    }
    
    public System.Threading.Tasks.Task<string[]> GetDirectoriesAsync(string path, string filt)
    {
        return base.Channel.GetDirectoriesAsync(path, filt);
    }
    
    public string[] GetLogicalDrives()
    {
        return base.Channel.GetLogicalDrives();
    }
    
    public System.Threading.Tasks.Task<string[]> GetLogicalDrivesAsync()
    {
        return base.Channel.GetLogicalDrivesAsync();
    }
    
    public System.IO.FileInfo GetFileInfo(string path)
    {
        return base.Channel.GetFileInfo(path);
    }
    
    public System.Threading.Tasks.Task<System.IO.FileInfo> GetFileInfoAsync(string path)
    {
        return base.Channel.GetFileInfoAsync(path);
    }
    
    public System.IO.FileAttributes GetFileAttributes(string path)
    {
        return base.Channel.GetFileAttributes(path);
    }
    
    public System.Threading.Tasks.Task<System.IO.FileAttributes> GetFileAttributesAsync(string path)
    {
        return base.Channel.GetFileAttributesAsync(path);
    }
    
    public string[] GetFiles(string path, string filt)
    {
        return base.Channel.GetFiles(path, filt);
    }
    
    public System.Threading.Tasks.Task<string[]> GetFilesAsync(string path, string filt)
    {
        return base.Channel.GetFilesAsync(path, filt);
    }
}
